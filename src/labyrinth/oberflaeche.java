/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package labyrinth;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author Sunny
 */
public class oberflaeche extends javax.swing.JFrame {

    /**
     * Creates new form oberflaeche
     */
    public oberflaeche() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                super.paintComponent(g);
                zeichneBild(g);
            }
        };
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        jButton3.setText("Start");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton1.setText("Reset");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton4.setText("Schrittweise -->");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        //START - STARTET DEN SCHNELLEN WEG
        
        Graphics2D g = (Graphics2D)jPanel1.getGraphics();
        
        int h = jPanel1.getHeight();
        int w = jPanel1.getWidth();
        h=h/10;
        w=w/13;
        for (int u = 0; u < 10; u++) {
        
            for (int i = 0; i < 13; i++) {
                    if (Statisch.eigflaeche[u][i]==1) {
                      g.setColor(Color.BLUE);  
                      g.fillRect(i*w, u*h, w, h); 
                    }else {
                    }
            }
        }  
        
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        //RESET - CLEART ALLES
        
        Graphics2D g = (Graphics2D)jPanel1.getGraphics();
        
        int h = jPanel1.getHeight();
        int w = jPanel1.getWidth();
        h=h/10;
        w=w/13;
        for (int u = 0; u < 10; u++) {
        
            for (int i = 0; i < 13; i++) {
                    if (Statisch.flaeche[u][i]!=0) {    //!=0 ist wichtig und nicht ==1 weil sonst das ziel (3) nicht gelöscht wird
                      g.clearRect(i*w, u*h, w, h);
                    }else {
                    }
            }
        } 
        Statisch.z=0;   //wichtige zurücksetzung der parameter für den schrittweisen weg
        Statisch.a=1;
        Statisch.b=1;
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        //SCHRITWEISE -->
        
        Graphics2D g = (Graphics2D)jPanel1.getGraphics();
                        
        int h = jPanel1.getHeight();
        int w = jPanel1.getWidth();
        h=h/10;
        w=w/13;
        int a=Statisch.a;
        int b=Statisch.b;
        
        int z = Statisch.z;
        
        int k = Statisch.k;
        
        if (k==0){                      //randominzer für die farben beim schrittweisen vorgehen
            g.setColor(Color.GREEN);
            k++;
        } else if (k==1){
            g.setColor(Color.RED);
            k++;
        } else {
            g.setColor(Color.BLUE);
            k=0;
        }
        Statisch.k=k;
        
            if ("rechts".equals(Statisch.weg2[z])){ 
                        a++;
                        g.fillRect(a*w, b*h, w, h); 
            } else if ("links".equals(Statisch.weg2[z])){
                        a--;
                        g.fillRect(a*w, b*h, w, h); 
            } else if ("oben".equals(Statisch.weg2[z])){
                        b--;
                        g.fillRect(a*w, b*h, w, h); 
            } else if ("unten".equals(Statisch.weg2[z])){
                        b++;
                        g.fillRect(a*w, b*h, w, h); 
            } else {
            }
            z++;
            Statisch.z=z;
            Statisch.a=a;
            Statisch.b=b;
            
    }//GEN-LAST:event_jButton4MouseClicked

    
    
    public void zeichneBild(Graphics g){  
        //zeichnet das labyrinth (schwarz)
        int h = jPanel1.getHeight();
        int w = jPanel1.getWidth();
        h=h/10;
        w=w/13;
     
        for (int u = 0; u < 10; u++) {   // zeichnet labyrint-layout
        
            for (int i = 0; i < 13; i++) {
                    if (Statisch.eigflaeche[u][i]==0) {
                      g.setColor(Color.BLACK);  
                      g.fillRect(i*w, u*h, w, h); 
                    }else {
                    }
            }
        }   
        
       
    }
    
    /**
     * int h = jPanel1.getHeight();
        int w = jPanel1.getWidth();

        int c = 0;      //soll aus weg2 array den weg bekommen und dann zeichnen
        String k;
        int i = 0;
        while (c==0){
            k = Statisch.weg2[i];
            if ("rechts".equals(Statisch.weg2[i])){ //weiterarbeiten: wie macht man das beim klick etwas gemalt wird und das gemalte bleibt? weil methode in method geht nicht

            } else if ("links".equals(Statisch.weg2[i])){

            } else if ("oben".equals(Statisch.weg2[i])){

            } else if ("unten".equals(Statisch.weg2[i])){

            } else {
                c=1;
            }
        }
     */
    
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(oberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(oberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(oberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(oberflaeche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new oberflaeche().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
